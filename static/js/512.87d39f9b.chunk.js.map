{"version":3,"file":"static/js/512.87d39f9b.chunk.js","mappings":"6QAEaA,EAAOC,EAAAA,GAAAA,KAAH,6IASJC,EAASD,EAAAA,GAAAA,OAAH,iiBAoBNE,EAAQF,EAAAA,GAAAA,MAAH,8W,SCWlB,EAtCoB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACrB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,UAACP,EAAD,CAAMI,SAXa,SAAAI,GACnBA,EAAEC,iBACGH,EAAYI,OAGfN,EAASE,GAFTK,MAAM,gCANRJ,EAAe,GAWhB,EAGC,WACE,kBAAOK,QAAQ,iBACf,SAACT,EAAD,CACEU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBACZC,KAAK,cACLC,MAAOZ,EACPa,SAAU,SAAAX,GAAC,OAAID,EAAeC,EAAEY,OAAOF,MAAMG,cAAlC,KAEb,SAACnB,EAAD,CAAQW,KAAK,SAAb,sBAGL,E,kBCjCcS,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,EADkB,mCACiBC,EAAAA,EADjB,kBACkCH,IAH7D,cAEUI,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWA,I,IAAA,E,SAX+B,GAAhBR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCAFS,EAAO9B,EAAAA,GAAAA,GAAH,iFAMJ+B,GAAO/B,EAAAA,EAAAA,IAAOgC,EAAAA,GAAPhC,CAAH,4aCWjB,EAhBkB,SAAC,GAAgB,IAAdiC,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CAAMO,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxC,SACGG,EAAMK,SAFFL,EAAME,GADA,KASxB,ECkDD,EA7DmB,WAAO,IAAD,EACvB,GAA4BnC,EAAAA,EAAAA,UAAS,MAArC,eAAO6B,EAAP,KAAeU,EAAf,KACA,GAA0BvC,EAAAA,EAAAA,UAAS,MAAnC,eAAOyB,EAAP,KAAce,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMb,GAAWC,EAAAA,EAAAA,MACXb,EAAS,UAAGwB,EAAaE,IAAI,gBAApB,QAAgC,IAO/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,EAAS,MAFK,SAIYvB,EAAgBC,GAJ5B,OAKqB,KAD7B6B,EAJQ,QAKEC,QAAQC,QACtB3C,MAAM,4BACNqC,EAAgB,KAEhBJ,EAAUQ,EAAYC,SATV,gDAYdR,EAAS,KAAMU,SAZD,yDAAH,qDAeXhC,EACF4B,IAEAP,EAAU,GAEb,GAAE,CAACrB,EAAWyB,IAEf,IAIMQ,EAAqC,OAAnBrB,EAASM,MAEjC,OACE,6BACIe,IACA,iCACE,SAAC,EAAD,CAAapD,SAVA,SAAAqD,GA5BM,IAAAC,EAEzBV,EAD6B,MADJU,EA6BND,GA5Be,CAAEC,MAAAA,GAAU,CAAC,EA6BhD,IASU5B,IAAS,mCAAWA,EAAMyB,WACf,OAAXrB,IACC,SAAC,EAAD,CAAWA,OAAQA,QAI3B,SAAC,EAAAyB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,6EClED,IAAMpC,EAAW,8BACXC,EAAU,kC","sources":["components/SearchField.styled.js","components/SearchField.jsx","servises/api/getSearchMovie.js","components/MovieList.styled.js","components/MovieList.jsx","pages/MoviesPage.jsx","servises/api/baseForGetFunction.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  margin-top: 30px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 9px 16px;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 2px;\n  border: none;\n  margin-left: 10px;\n  background-color: rgba(4, 55, 184, 1);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  color: #fff;\n  transition: background 250ms ease-in-out, color 250ms ease-in-out;\n  &:hover,\n  &:focus {\n    background-color: rgba(240, 240, 240, 1);\n    color: rgba(4, 55, 184, 1);\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 300px;\n  font: inherit;\n  font-size: 16px;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 2px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from '../components/SearchField.styled';\n\nconst SearchField = ({ onSubmit }) => {\n  const [searchField, setSearchField] = useState('');\n\n  const reset = () => {\n    setSearchField('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!searchField.trim()) {\n      alert('Enter the word to search for');\n    } else {\n      onSubmit(searchField);\n    }\n    reset()\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor=\"searchField\"></label>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie...\"\n        name=\"searchField\"\n        value={searchField}\n        onChange={e => setSearchField(e.target.value.toLowerCase())}\n      ></Input>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchField.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchField;\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './baseForGetFunction';\n\nasync function getSearchMovies(movieName) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${movieName}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getSearchMovies;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 20px;\n`;\n\nexport const Link = styled(NavLink)`\ndisplay: block;\n  padding: 6px 12px;\n  border-radius: 2px;\n  text-decoration: none;\n  color: #000;\n  font-weight: 600;\n  font-size: 16px;\n  transition: all 250ms ease;\n  &:hover,\n  &:focus {\n    background-color: rgba(4, 55, 184, 1);\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { List, Link } from '../components/MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n      <List>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </List>\n    );\n}\n\nexport default MovieList;","import { useEffect, useState, Suspense } from 'react';\nimport { useSearchParams, useLocation, Outlet } from 'react-router-dom';\nimport SearchField from 'components/SearchField';\nimport getSearchMovies from '../servises/api/getSearchMovie';\nimport LoadingView from '../components/LoadingView';\nimport MovieList from 'components/MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateSearchString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n\n        const searchMovie = await getSearchMovies(movieName);\n        if (searchMovie.results.length === 0) {\n          alert('nothing found, try again');\n          setSearchParams('');\n        } else {\n          setMovies(searchMovie.results);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    if (movieName) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [movieName, setSearchParams]);\n\n  const handleSubmit = SearchField => {\n    updateSearchString(SearchField);\n  };\n\n  const showSearchField = location.state !== null;\n\n  return (\n    <main>\n      {!showSearchField && (\n        <>\n          <SearchField onSubmit={handleSubmit} />\n            {error && <p>Error: {error.message}</p>}\n            {movies !== null && (\n              <MovieList movies={movies} />\n            )}\n        </>\n      )}\n      <Suspense fallback={<LoadingView />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '8a9eba837e68269aae614f789a756a23';\n\nexport { BASE_URL, API_KEY };"],"names":["Form","styled","Button","Input","onSubmit","useState","searchField","setSearchField","e","preventDefault","trim","alert","htmlFor","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","getSearchMovies","movieName","axios","BASE_URL","API_KEY","response","data","console","error","List","Link","NavLink","movies","location","useLocation","map","movie","to","id","state","from","title","setMovies","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","searchMovie","results","length","message","showSearchField","SearchField","query","Suspense","fallback","LoadingView"],"sourceRoot":""}