{"version":3,"file":"static/js/435.8a1c3ddb.chunk.js","mappings":"8PAMA,EAJiB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OAAO,SAAC,KAAD,CAAMD,GAAIA,EAAV,SAAeC,GACvB,E,SCFKC,EAAW,8BACXC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oBACEG,EADF,oBACqBF,IAHhD,cAEUI,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWA,MAbA,SAE+B,GAAhBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EC4Ef,EA5EyB,WAAO,IAAD,IAC7B,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcM,EAAd,KAEQX,GAAYY,EAAAA,EAAAA,MAAZZ,QACFa,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAsBpD,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdT,EAAS,MACTD,GAAW,GAHG,SAKaX,EAAgBC,GAL7B,OAKRqB,EALQ,OAOdX,GAAW,GACXF,EAASa,GARK,kDAUdX,GAAW,GACXC,EAAS,KAAMW,SAXD,QAahBZ,GAAW,GAbK,0DAAH,qDAefU,GACD,GAAE,CAACpB,KAIF,iCACE,SAAC,EAAD,CAAUL,GAAIoB,EAAaQ,QAA3B,qBACCd,IAAW,sCACXJ,IAAS,mCAAWA,EAAMiB,WAChB,OAAVf,IACC,gCACE,gBACEiB,IAAG,yCAAoCjB,EAAMkB,aAC7CC,IAAI,qBAEN,4BACE,kCAAQnB,EAAMoB,MAAd,aAAwBpB,EAAMqB,aAAaC,MAAM,EAAG,GAApD,QACA,0BACE,2CADF,UAEMtB,EAAMuB,kBAEZ,0BACE,yCADF,UAEMvB,EAAMwB,cAEZ,0BACE,uCADF,UAEMxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAGnD,2BACE,yBACE,SAAC,KAAD,CAAMzC,GAAG,OAAOsB,MAAO,CAAEC,KAAML,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMlB,GAAG,UAAUsB,MAAO,CAAEC,KAAML,GAAlC,2BAKJ,SAAC,EAAAwB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/Backlink.jsx","servises/getMovieDetails.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst BackLink = ({ to, children }) => {\n  return <Link to={to}>{children}</Link>;\n};\n\nexport default BackLink;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '8a9eba837e68269aae614f789a756a23';\n\nasync function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovieDetails;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport BackLink from '../components/Backlink';\nimport getMovieDetails from '../servises/getMovieDetails';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setError(null);\n        setLoading(true);\n\n        const movieDetails = await getMovieDetails(movieId);\n\n        setLoading(true);\n        setMovie(movieDetails);\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [movieId]);\n\n\n  return (\n    <>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error.message}</p>}\n      {movie !== null && (\n        <section>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt=\"poster the film\"\n          ></img>\n          <div>\n            <h3>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h3>\n            <p>\n              <span>User Score: </span>\n              {`${movie.vote_average}`}\n            </p>\n            <p>\n              <span>Overview: </span>\n              {`${movie.overview}`}\n            </p>\n            <p>\n              <span>Genres: </span>\n              {`${movie.genres.map(genre => genre.name).join(', ')}`}\n            </p>\n          </div>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["to","children","BASE_URL","API_KEY","getMovieDetails","movieId","axios","response","data","console","error","useState","movie","setMovie","loading","setLoading","setError","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchData","movieDetails","message","current","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}