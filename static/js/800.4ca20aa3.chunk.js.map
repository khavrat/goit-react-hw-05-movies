{"version":3,"file":"static/js/800.4ca20aa3.chunk.js","mappings":"+PAGeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,EADkB,oBACEF,EADF,4BAC6BG,EAAAA,IAHxD,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWA,M,SAX+B,GAAhBR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SC6Cf,EA3CgB,WACd,OAA6BS,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcI,EAAd,KAEQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAgBR,OAdAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBH,EAAS,MAFQ,SAIUZ,EAAgBC,GAJ1B,OAIXe,EAJW,OAKjBL,EAAUK,EAAaC,SALN,gDAOjBL,EAAS,KAAMM,SAPE,yDAAH,qDAUlBH,GACD,GAAE,CAACd,KAGF,+BACGO,IAAS,mCAAWA,EAAMU,WAC1BR,GAA8B,IAAnBA,EAAQS,QAClB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,6BAAKD,EAAOE,QAAZ,SAFOF,EAAOG,GADC,OAQrB,6DAIP,C,6EC1CD,IAAMrB,EAAW,8BACXC,EAAU,kC","sources":["servises/api/getMovieReviews.js","components/Reviews.jsx","servises/api/baseForGetFunction.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from './baseForGetFunction';\n\nasync function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovieReviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getMovieReviews from '../servises/api/getMovieReviews';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setError(null);\n\n        const movieReviews = await getMovieReviews(movieId);\n        setReview(movieReviews.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      {error && <p>Error: {error.message}</p>}\n      {reviews && reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>'{review.content}'</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We have no reviews of this film</p>\n      )}\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '8a9eba837e68269aae614f789a756a23';\n\nexport { BASE_URL, API_KEY };"],"names":["getMovieReviews","movieId","axios","BASE_URL","API_KEY","response","data","console","error","useState","reviews","setReview","setError","useParams","useEffect","fetchReviews","movieReviews","results","message","length","map","review","author","content","id"],"sourceRoot":""}