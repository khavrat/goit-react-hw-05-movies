{"version":3,"file":"static/js/21.42be05c8.chunk.js","mappings":"6PAGeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,EADkB,oBACEF,EADF,4BAC6BG,EAAAA,IAHxD,cAEUC,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWA,I,UAAA,E,SAX+B,GAAhBR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCDFS,EAAUC,EAAAA,GAAAA,QAAH,4CAIPC,EAAcD,EAAAA,GAAAA,GAAH,0EAMXE,EAAaF,EAAAA,GAAAA,GAAH,6OASVG,EAAeH,EAAAA,GAAAA,EAAH,kLAUZI,EAAgBJ,EAAAA,GAAAA,EAAH,0E,SCwB1B,EA3CgB,WACd,OAA6BK,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOP,EAAP,KAAcU,EAAd,KAEQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAgBR,OAdAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBH,EAAS,MAFQ,SAIUlB,EAAgBC,GAJ1B,OAIXqB,EAJW,OAKjBL,EAAUK,EAAaC,SALN,gDAOjBL,EAAS,KAAMM,SAPE,yDAAH,qDAUlBH,GACD,GAAE,CAACpB,KAGF,UAACQ,EAAD,WACGD,IAAS,mCAAWA,EAAMgB,WAC1BR,GAA8B,IAAnBA,EAAQS,QAClB,SAACd,EAAD,UACGK,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAACf,EAAD,YACE,UAACC,EAAD,sBAAuBc,EAAOC,WAC9B,UAACd,EAAD,eAAiBa,EAAOE,QAAxB,SAFeF,EAAOG,GADP,OAQrB,SAAChB,EAAD,gDAIP,C,6ECjDD,IAAMX,EAAW,8BACXC,EAAU,kC","sources":["servises/api/getMovieReviews.js","components/Reviws.styled.js","components/Reviews.jsx","servises/api/baseForGetFunction.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from './baseForGetFunction';\n\nasync function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovieReviews;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 24px 0;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewItem = styled.li`\npadding: 14px 28px;\nmargin-bottom: 14px;\n  background-color: #ffffff;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius:4px;\n`;\n\nexport const ReviewerName = styled.p`\n  margin: 14px 0;\n  padding: 0;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  color: rgba(4, 55, 184, 1);\n`;\n\nexport const ReviewContent = styled.p`\n  margin: 0;\n  padding: 0;\n  line-height: 1.5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getMovieReviews from '../servises/api/getMovieReviews';\nimport {\n  Section,\n  ReviewsList,\n  ReviewItem,\n  ReviewerName,\n  ReviewContent\n} from '../components/Reviws.styled';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setError(null);\n\n        const movieReviews = await getMovieReviews(movieId);\n        setReview(movieReviews.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Section>\n      {error && <p>Error: {error.message}</p>}\n      {reviews && reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <ReviewerName>Author: {review.author}</ReviewerName>\n              <ReviewContent>'{review.content}'</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <ReviewContent>We have no reviews of this film</ReviewContent>\n      )}\n    </Section>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '8a9eba837e68269aae614f789a756a23';\n\nexport { BASE_URL, API_KEY };"],"names":["getMovieReviews","movieId","axios","BASE_URL","API_KEY","response","data","console","error","Section","styled","ReviewsList","ReviewItem","ReviewerName","ReviewContent","useState","reviews","setReview","setError","useParams","useEffect","fetchReviews","movieReviews","results","message","length","map","review","author","content","id"],"sourceRoot":""}