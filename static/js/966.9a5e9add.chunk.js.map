{"version":3,"file":"static/js/966.9a5e9add.chunk.js","mappings":"sPAEMA,EAAW,8BACXC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oBACEG,EADF,4BAC6BF,IAHxD,cAEUI,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAR,MAPJ,gFAWA,MAbA,SAE+B,GAAhBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCsCf,EAvCgB,WACd,OAA6BO,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcI,EAAd,KAEQT,GAAYU,EAAAA,EAAAA,MAAZV,QAgBJ,OAdJW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBH,EAAS,MAFQ,SAIUV,EAAgBC,GAJ1B,OAIXa,EAJW,OAKjBL,EAAUK,EAAaC,SALN,gDAOjBL,EAAS,KAAMM,SAPE,yDAAH,qDAUlBH,GACD,GAAE,CAACZ,KAGE,gCACGK,IAAS,mCAAWA,EAAMU,WAC1BR,GAA6B,IAAlBA,EAAQS,QAClB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,6BAAKD,EAAOE,QAAZ,SAFOF,EAAOG,GADC,OAQrB,6DAIX,C","sources":["servises/getMovieReviews.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '8a9eba837e68269aae614f789a756a23';\n\nasync function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovieReviews;\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieReviews from '../servises/getMovieReviews';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setError(null);\n\n        const movieReviews = await getMovieReviews(movieId);\n        setReview(movieReviews.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n    \n      return (\n        <>\n          {error && <p>Error: {error.message}</p>}\n          {reviews && reviews.length !==0 ? (\n            <ul>\n              {reviews.map(review => (\n                <li key={review.id}>\n                  <p>Author: {review.author}</p>\n                  <p>'{review.content}'</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>We have no reviews of this film</p>\n          )}\n        </>\n      );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getMovieReviews","movieId","axios","response","data","console","error","useState","reviews","setReview","setError","useParams","useEffect","fetchReviews","movieReviews","results","message","length","map","review","author","content","id"],"sourceRoot":""}